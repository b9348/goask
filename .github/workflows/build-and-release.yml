name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    strategy:
      matrix:
        include:
          # Windows builds
          - platform: windows-latest
            os: windows
            arch: amd64
            wails_platform: windows/amd64
            artifact_name: goask-windows-amd64.exe
          - platform: windows-latest
            os: windows
            arch: arm64
            wails_platform: windows/arm64
            artifact_name: goask-windows-arm64.exe
          
          # macOS builds
          - platform: macos-latest
            os: darwin
            arch: amd64
            wails_platform: darwin/amd64
            artifact_name: goask-macos-amd64
          - platform: macos-latest
            os: darwin
            arch: arm64
            wails_platform: darwin/arm64
            artifact_name: goask-macos-arm64
          
          # Linux builds
          - platform: ubuntu-latest
            os: linux
            arch: amd64
            wails_platform: linux/amd64
            artifact_name: goask-linux-amd64
          - platform: ubuntu-latest
            os: linux
            arch: arm64
            wails_platform: linux/arm64
            artifact_name: goask-linux-arm64
    
    runs-on: ${{ matrix.platform }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Linux dependencies
      if: matrix.os == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential pkg-config libgtk-3-dev libwebkit2gtk-4.0-dev libgio-unix-2.0-dev
    
    - name: Install Linux ARM64 cross-compilation tools
      if: matrix.os == 'linux' && matrix.arch == 'arm64'
      run: |
        sudo apt-get install -y gcc-aarch64-linux-gnu
        echo "CC=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
        echo "CGO_ENABLED=1" >> $GITHUB_ENV
        echo "GOOS=linux" >> $GITHUB_ENV
        echo "GOARCH=arm64" >> $GITHUB_ENV
    
    - name: Install Wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
    
    - name: Install frontend dependencies
      run: npm install
      working-directory: frontend
    
    - name: Build application
      run: wails build -platform ${{ matrix.wails_platform }}
    
    - name: Prepare artifacts (Windows)
      if: matrix.os == 'windows'
      run: |
        mkdir -p release
        cp build/bin/goask.exe release/${{ matrix.artifact_name }}
      shell: bash
    
    - name: Prepare artifacts (Unix)
      if: matrix.os != 'windows'
      run: |
        mkdir -p release
        cp build/bin/goask release/${{ matrix.artifact_name }}
        chmod +x release/${{ matrix.artifact_name }}
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.artifact_name }}
        path: release/${{ matrix.artifact_name }}
  
  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          artifacts/goask-windows-amd64.exe/goask-windows-amd64.exe
          artifacts/goask-windows-arm64.exe/goask-windows-arm64.exe
          artifacts/goask-macos-amd64/goask-macos-amd64
          artifacts/goask-macos-arm64/goask-macos-arm64
          artifacts/goask-linux-amd64/goask-linux-amd64
          artifacts/goask-linux-arm64/goask-linux-arm64
        draft: false
        prerelease: false
        generate_release_notes: true
