name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    strategy:
      matrix:
        include:
          - platform: ubuntu-latest
            os: linux
            arch: amd64
            extension: ""
          - platform: windows-latest
            os: windows
            arch: amd64
            extension: ".exe"
          - platform: macos-latest
            os: darwin
            arch: amd64
            extension: ".app"
          - platform: macos-14  # macOS ARM64
            os: darwin
            arch: arm64
            extension: ".app"
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install Linux dependencies
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential pkg-config libgtk-3-dev libwebkit2gtk-4.1-dev

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        cache: false  # Disable cache to avoid timeout issues

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Install Wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

    - name: Install frontend dependencies
      run: npm install
      working-directory: frontend

    - name: Build application
      run: wails build -clean

    - name: Prepare release artifacts (Linux)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        mkdir -p release
        cp build/bin/goask release/goask-linux-amd64
        chmod +x release/goask-linux-amd64

    - name: Prepare release artifacts (Windows)
      if: matrix.platform == 'windows-latest'
      run: |
        mkdir release
        copy "build\bin\goask.exe" "release\goask-windows-amd64.exe"

    - name: Prepare release artifacts (macOS Intel)
      if: matrix.platform == 'macos-latest'
      run: |
        mkdir -p release
        cp -r build/bin/goask.app release/goask-macos-amd64.app
        # Create a zip file for macOS app bundle
        cd release
        zip -r goask-macos-amd64.zip goask-macos-amd64.app

    - name: Prepare release artifacts (macOS ARM64)
      if: matrix.platform == 'macos-14'
      run: |
        mkdir -p release
        cp -r build/bin/goask.app release/goask-macos-arm64.app
        # Create a zip file for macOS app bundle
        cd release
        zip -r goask-macos-arm64.zip goask-macos-arm64.app

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: goask-${{ matrix.os }}-${{ matrix.arch }}
        path: release/*

  create-release:
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Display structure of downloaded files
      run: ls -la artifacts/

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/goask-linux-amd64/goask-linux-amd64
        asset_name: goask-linux-amd64
        asset_content_type: application/octet-stream

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/goask-windows-amd64/goask-windows-amd64.exe
        asset_name: goask-windows-amd64.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS Intel Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/goask-darwin-amd64/goask-macos-amd64.zip
        asset_name: goask-macos-amd64.zip
        asset_content_type: application/zip

    - name: Upload macOS ARM64 Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: artifacts/goask-darwin-arm64/goask-macos-arm64.zip
        asset_name: goask-macos-arm64.zip
        asset_content_type: application/zip