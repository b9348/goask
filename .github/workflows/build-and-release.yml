name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  GO_VERSION: '1.23'
  NODE_VERSION: '18'
  WAILS_VERSION: 'latest'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform:
          - name: 'windows-amd64'
            os: 'windows-latest'
            build-name: 'goask.exe'
            build-path: 'build/bin/goask.exe'
            asset-name: 'goask-windows-amd64.exe'
          - name: 'linux-amd64'
            os: 'ubuntu-latest'
            build-name: 'goask'
            build-path: 'build/bin/goask'
            asset-name: 'goask-linux-amd64'
          - name: 'darwin-amd64'
            os: 'macos-latest'
            build-name: 'goask'
            build-path: 'build/bin/goask.app'
            asset-name: 'goask-darwin-amd64.app'
          - name: 'darwin-arm64'
            os: 'macos-latest'
            build-name: 'goask'
            build-path: 'build/bin/goask.app'
            asset-name: 'goask-darwin-arm64.app'

    runs-on: ${{ matrix.platform.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: 'frontend/package-lock.json'

    - name: Install Linux dependencies
      if: matrix.platform.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev

    - name: Install Wails
      run: go install github.com/wailsapp/wails/v2/cmd/wails@${{ env.WAILS_VERSION }}

    - name: Install frontend dependencies
      run: npm install
      working-directory: frontend

    - name: Build application (Windows/Linux)
      if: matrix.platform.name != 'darwin-arm64'
      run: wails build -platform ${{ matrix.platform.name }}

    - name: Build application (macOS ARM64)
      if: matrix.platform.name == 'darwin-arm64'
      run: wails build -platform darwin/arm64

    - name: Prepare artifacts (Windows)
      if: matrix.platform.os == 'windows-latest'
      run: |
        mkdir -p artifacts
        cp "${{ matrix.platform.build-path }}" "artifacts/${{ matrix.platform.asset-name }}"
      shell: bash

    - name: Prepare artifacts (Linux)
      if: matrix.platform.os == 'ubuntu-latest'
      run: |
        mkdir -p artifacts
        cp "${{ matrix.platform.build-path }}" "artifacts/${{ matrix.platform.asset-name }}"
        chmod +x "artifacts/${{ matrix.platform.asset-name }}"

    - name: Prepare artifacts (macOS)
      if: matrix.platform.os == 'macos-latest'
      run: |
        mkdir -p artifacts
        if [ "${{ matrix.platform.name }}" = "darwin-arm64" ]; then
          cp -r "${{ matrix.platform.build-path }}" "artifacts/goask-darwin-arm64.app"
        else
          cp -r "${{ matrix.platform.build-path }}" "artifacts/${{ matrix.platform.asset-name }}"
        fi

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.platform.name }}
        path: artifacts/
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Prepare release assets
      run: |
        # Zip macOS apps
        cd artifacts/darwin-amd64
        zip -r goask-darwin-amd64.zip goask-darwin-amd64.app
        cd ../darwin-arm64
        zip -r goask-darwin-arm64.zip goask-darwin-arm64.app
        cd ..

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        files: |
          artifacts/windows-amd64/goask-windows-amd64.exe
          artifacts/linux-amd64/goask-linux-amd64
          artifacts/darwin-amd64/goask-darwin-amd64.zip
          artifacts/darwin-arm64/goask-darwin-arm64.zip
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}